/**
 * This class is generated by jOOQ
 */
package com.womply.billing.killbill.plugins.jooq.tables;


import com.womply.billing.killbill.plugins.jooq.DefaultSchema;
import com.womply.billing.killbill.plugins.jooq.Keys;
import com.womply.billing.killbill.plugins.jooq.tables.records.AuthorizeNetCustomerProfilesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorizeNetCustomerProfiles extends TableImpl<AuthorizeNetCustomerProfilesRecord> {

	private static final long serialVersionUID = 2096887417;

	/**
	 * The reference instance of <code>authorize_net_customer_profiles</code>
	 */
	public static final AuthorizeNetCustomerProfiles AUTHORIZE_NET_CUSTOMER_PROFILES = new AuthorizeNetCustomerProfiles();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AuthorizeNetCustomerProfilesRecord> getRecordType() {
		return AuthorizeNetCustomerProfilesRecord.class;
	}

	/**
	 * The column <code>authorize_net_customer_profiles.record_id</code>.
	 */
	public final TableField<AuthorizeNetCustomerProfilesRecord, ULong> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>authorize_net_customer_profiles.customer_id</code>.
	 */
	public final TableField<AuthorizeNetCustomerProfilesRecord, String> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>authorize_net_customer_profiles.customer_profile_id</code>.
	 */
	public final TableField<AuthorizeNetCustomerProfilesRecord, String> CUSTOMER_PROFILE_ID = createField("customer_profile_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>authorize_net_customer_profiles.created_at</code>.
	 */
	public final TableField<AuthorizeNetCustomerProfilesRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>authorize_net_customer_profiles.updated_at</code>.
	 */
	public final TableField<AuthorizeNetCustomerProfilesRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>authorize_net_customer_profiles.kb_tenant_id</code>.
	 */
	public final TableField<AuthorizeNetCustomerProfilesRecord, String> KB_TENANT_ID = createField("kb_tenant_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * Create a <code>authorize_net_customer_profiles</code> table reference
	 */
	public AuthorizeNetCustomerProfiles() {
		this("authorize_net_customer_profiles", null);
	}

	/**
	 * Create an aliased <code>authorize_net_customer_profiles</code> table reference
	 */
	public AuthorizeNetCustomerProfiles(String alias) {
		this(alias, AUTHORIZE_NET_CUSTOMER_PROFILES);
	}

	private AuthorizeNetCustomerProfiles(String alias, Table<AuthorizeNetCustomerProfilesRecord> aliased) {
		this(alias, aliased, null);
	}

	private AuthorizeNetCustomerProfiles(String alias, Table<AuthorizeNetCustomerProfilesRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AuthorizeNetCustomerProfilesRecord, ULong> getIdentity() {
		return Keys.IDENTITY_AUTHORIZE_NET_CUSTOMER_PROFILES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AuthorizeNetCustomerProfilesRecord> getPrimaryKey() {
		return Keys.KEY_AUTHORIZE_NET_CUSTOMER_PROFILES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AuthorizeNetCustomerProfilesRecord>> getKeys() {
		return Arrays.<UniqueKey<AuthorizeNetCustomerProfilesRecord>>asList(Keys.KEY_AUTHORIZE_NET_CUSTOMER_PROFILES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthorizeNetCustomerProfiles as(String alias) {
		return new AuthorizeNetCustomerProfiles(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AuthorizeNetCustomerProfiles rename(String name) {
		return new AuthorizeNetCustomerProfiles(name, null);
	}
}
